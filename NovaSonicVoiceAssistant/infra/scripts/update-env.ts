import * as fs from 'fs';
import * as path from 'path';
import { execSync } from 'child_process';

/**
 * Updates environment files with Cognito and DynamoDB settings from CloudFormation outputs
 */
async function updateEnvFiles() {
  console.log('Updating environment files with Cognito and DynamoDB settings...');

  try {
    // Get the stack name from the CDK context or use the default
    const stackName = process.env.CDK_CONTEXT_STACK_NAME || 'SmartTodoNovaStack';
    console.log(`Getting outputs from stack: ${stackName}`);

    // Get CloudFormation outputs
    const outputs = JSON.parse(
      execSync(`aws cloudformation describe-stacks --stack-name ${stackName} --query "Stacks[0].Outputs" --output json`, {
        encoding: 'utf-8',
      })
    );

    // Extract values from outputs
    const getOutput = (key: string): string => {
      const output = outputs.find((o: any) => o.OutputKey === key);
      return output ? output.OutputValue : '';
    };

    const userPoolId = getOutput('CognitoUserPoolId');
    const userPoolClientId = getOutput('CognitoUserPoolClientId');
    const tableName = getOutput('DynamoDBTableName');
    const apiUrl = getOutput('ApiUrl');
    const cognitoDomainUrl = getOutput('CognitoDomainUrl');

    // Update UI environment files
    const uiDir = path.join(__dirname, '../../ui');
    
    // Update UI environment files
    const uiEnvContent = `# Auto-generated by update-env.ts script
# Last updated: ${new Date().toISOString()}
VITE_COGNITO_USER_POOL_ID=${userPoolId}
VITE_COGNITO_USER_POOL_CLIENT_ID=${userPoolClientId}
VITE_COGNITO_REGION=us-east-1
VITE_API_ENDPOINT=${apiUrl}`;

    // Write to .env file
    fs.writeFileSync(path.join(uiDir, '.env'), uiEnvContent);
    console.log(`Updating UI environment file: ${path.join(uiDir, '.env')}`);

    // Write to .env.production file with API endpoint as /api for CloudFront proxy
    const uiEnvProductionContent = `# Auto-generated by update-env.ts script
# Last updated: ${new Date().toISOString()}
VITE_COGNITO_USER_POOL_ID=${userPoolId}
VITE_COGNITO_USER_POOL_CLIENT_ID=${userPoolClientId}
VITE_COGNITO_REGION=us-east-1
VITE_API_ENDPOINT=/api`;
    
    fs.writeFileSync(path.join(uiDir, '.env.production'), uiEnvProductionContent);
    console.log(`Updating UI environment file: ${path.join(uiDir, '.env.production')}`);
    console.log('UI environment files updated successfully');

    // Update API environment file
    const apiDir = path.join(__dirname, '../../api');
    const apiEnvContent = `# Auto-generated by update-env.ts script
# Last updated: ${new Date().toISOString()}
TABLE_NAME=${tableName}

# Cognito Configuration
COGNITO_USER_POOL_ID=${userPoolId}
COGNITO_CLIENT_ID=${userPoolClientId}
COGNITO_DOMAIN_URL=${cognitoDomainUrl}
COGNITO_REGION=us-east-1

# API Configuration
API_URL=${apiUrl}
NODE_ENV=development
`;

    console.log(`Updating API environment file: ${path.join(apiDir, '.env')}`);
    fs.writeFileSync(path.join(apiDir, '.env'), apiEnvContent);

    console.log('API environment file updated successfully');
    console.log('All environment files updated successfully');
  } catch (error) {
    console.error('Error updating environment files:', error);
    process.exit(1);
  }
}

// Run the function
updateEnvFiles();
